name: test-env-concat

on:
  # This event will only trigger a workflow run if the workflow file is on the default branch.
  # ucomment the following line if you want to run the workflow manually
  workflow_dispatch:

jobs:
  # Set environment variables for all repositories concerned by this global workflow
  set-env:
    runs-on: ubuntu-latest
    outputs:
      CODE_OF_CONDUCT: ${{ steps.step-set-env.outputs.CODE_OF_CONDUCT }}
      ADOPTERS: ${{ steps.step-set-env.outputs.ADOPTERS }}
    steps:
      - id: step-set-env
        run: |
          # Define environment variables for all repositories concerned by this global workflow
          DELIVERED_COMPONENTS="microcks,microcks-cli,microcks-operator,microcks-ansible-operator,microcks-postman-runtime,microcks-testcontainers-java,microcks-testcontainers-go,microcks-testcontainers-node,microcks-quarkus,microcks-java-client,microcks-go-client,microcks-docker-desktop-extension,microcks-backstage-provider,microcks-jenkins-plugin,microcks-spectral-ruleset,import-github-action,test-github-action,hub.microcks.io"
          DEMONSTRATIONS="microcks-testcontainers-java-spring-demo,microcks-testcontainers-node-nest-demo,microcks-testcontainers-go-demo,api-lifecycle,api-tooling"
          DOCUMENTATION="microcks.io"
          COMMUNITY_RESOURCES=".github,community,microcks-quickstarters,community-mocks"
          EXCLUDED_ARCHIVED_REPOS="microcks-keycloak,microcks-go-operator,microcks-azure"
          
          # Set environment variables for all repositories concerned by this global workflow
          # See this issue for more details: https://github.com/microcks/.github/issues/16
          
          # Concatenate environment variables to ignore and assign them to CODE_OF_CONDUCT
          echo "CODE_OF_CONDUCT=$EXCLUDED_ARCHIVED_REPOS" >> "$GITHUB_OUTPUT"

          # Concatenate environment variables to ignore and assign them to ADOPTERS
          echo "ADOPTERS=$EXCLUDED_ARCHIVED_REPOS,$DEMONSTRATIONS,$DOCUMENTATION" >> "$GITHUB_OUTPUT"
  
  print-env:
    runs-on: ubuntu-latest
    needs: set-env
    name: print env to verify
    steps:
        run: echo "${{needs.set-env.outputs.CODE_OF_CONDUCT}} --- ${{needs.set-env.outputs.ADOPTERS}}"

      #- env:
      #   CODE_OF_CONDUCT: ${{needs.set-env.outputs.CODE_OF_CONDUCT}}
      #  ADOPTERS: ${{needs.set-env.outputs.ADOPTERS}}
